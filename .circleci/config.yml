version: 2
description: "Node CI/CD"

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:dubnium

jobs:
  checkout-scm:
    <<: *defaults
    name: Checkout
    steps:
      - checkout
      - persist_to_workspace:
          root: ~/repo
          paths: .
  lint-and-build:
    <<: *defaults
    name: Build & Lint
    steps:
      - attach_workspace:
          at: ~/repo
      - restore_cache:
          name: Restore NPM Package Cache
          keys:
            - v1-modules-{{ checksum "package.json" }}
            - v1-modules-
      - run:
          name: NPM Install
          command: npm install
      - save_cache:
          name: Save NPM Package Cache
          key: v1-modules-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Test
          command: npm run test
      - run:
          name: Build
          command: npm run build
  docker-build:
    name: Docker Build
    working_directory: ~/repo
    machine: true
    environment:
      TAG: $(echo $CIRCLE_SHA1 | cut -c -7)
      IMAGE_NAME: dressit
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Build and Push Docker Image
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
            docker build -t omerico/$IMAGE_NAME:$TAG -t omerico/$IMAGE_NAME:latest .
            docker push "omerico/$IMAGE_NAME:$TAG" "omerico/$IMAGE_NAME:latest"
      - persist_to_workspace:
          root: ~/repo
          paths: .
  deploy:
    name: Deploy
    working_directory: ~/repo
    machine: true
    steps:
      - attach_workspace:
          at: ~/repo
      - add_ssh_keys:
          fingerprints:
            - "fe:ba:a1:4b:01:5e:c8:a9:41:be:d3:ce:cb:4d:69:90"
      - run:
          name: Deploy To DigitalOcean
          command: ssh root@dressit.live 'cd /var/scripts && . deploy.sh';
      - persist_to_workspace:
          root: ~/repo
          paths: .
          
workflows:
  version: 2
  test-deploy:
    jobs:
      - checkout-scm:
          context: bingetime
      - lint-and-build:
          context: bingetime
          requires:
            - checkout-scm
      - docker-build:
          context: bingetime
          requires:
            - checkout-scm
            - lint-and-build
          filters:
            branches:
              only:
                - master
      - deploy:
          context: bingetime
          requires:
            - docker-build
          filters:
            branches:
              only:
                - master
